# Generated by Django 5.1.4 on 2025-09-18 12:08

import blog.utils
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('section_type', models.CharField(choices=[('text', 'Text Only'), ('image', 'Image'), ('gallery', 'Gallery'), ('faq', 'FAQ Section'), ('booking_form', 'Booking Form Embed'), ('cta_banner', 'Call-to-Action Banner'), ('map', 'Map / Location'), ('video', 'Video Embed'), ('features', 'Features List'), ('quote', 'Quote / Testimonial'), ('steps', 'Step-by-Step Guide'), ('table', 'Table / Price List'), ('download', 'Downloadable Content')], default='text', max_length=50)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FaqLibraryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_identifier', models.CharField(default='New FAQ', max_length=120, unique=True)),
                ('key', models.SlugField(blank=True, help_text="Stable key, e.g. 'payment-methods'", max_length=120, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_expanded_by_default', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_title', models.CharField(help_text='Internal reference name, not shown publicly', max_length=255)),
                ('slug', models.SlugField(max_length=150)),
                ('slug_locked', models.BooleanField(default=False, help_text='If True, slug will not be auto-generated and must be set manually')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to=blog.utils.blog_main_image_upload_to)),
                ('main_image_small', models.ImageField(blank=True, null=True, upload_to=blog.utils.blog_main_thumbnail_upload_to)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('featured', models.BooleanField(default=False)),
                ('priority', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('is_translated_fully', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.blogcategory')),
                ('tags', models.ManyToManyField(blank=True, to='blog.blogtag')),
            ],
        ),
        migrations.CreateModel(
            name='BlogSectionMap',
            fields=[
                ('section', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='map', serialize=False, to='blog.blogsection')),
                ('provider', models.CharField(choices=[('google_my_maps', 'Google My Maps')], default='google_my_maps', max_length=32)),
                ('is_active', models.BooleanField(default=True)),
                ('internal_identifier', models.CharField(blank=True, help_text='Optional internal ID to identify the map in the provider system', max_length=128)),
                ('iframe_height', models.PositiveIntegerField(default=420, help_text='Suggested iframe height (px)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Blog Section Map',
                'verbose_name_plural': 'Blog Section Maps',
            },
        ),
        migrations.AddField(
            model_name='blogsection',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='blog.blogpost'),
        ),
        migrations.CreateModel(
            name='BlogImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=blog.utils.blog_image_upload_to)),
                ('image_small', models.ImageField(blank=True, null=True, upload_to=blog.utils.blog_image_small_upload_to)),
                ('is_primary', models.BooleanField(default=False)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('bytes', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_x', models.FloatField(blank=True, null=True)),
                ('focal_y', models.FloatField(blank=True, null=True)),
                ('dominant_color', models.CharField(blank=True, max_length=9)),
                ('blurhash', models.CharField(blank=True, max_length=50)),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blog.blogsection')),
            ],
        ),
        migrations.CreateModel(
            name='BlogSectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('heading', models.CharField(blank=True, max_length=255)),
                ('body', models.TextField(blank=True)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('og_image', models.ImageField(blank=True, null=True, upload_to=blog.utils.blog_og_image_upload_to)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.blogsection')),
            ],
            options={
                'ordering': ['language'],
            },
        ),
        migrations.CreateModel(
            name='BlogVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('youtube', 'YouTube'), ('vimeo', 'Vimeo'), ('self', 'Self-hosted'), ('other', 'Other/External')], default='youtube', max_length=20)),
                ('provider_video_id', models.CharField(blank=True, max_length=200)),
                ('source_url', models.URLField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='blog/videos/%Y/%m/')),
                ('hls_url', models.URLField(blank=True)),
                ('dash_url', models.URLField(blank=True)),
                ('poster', models.ImageField(blank=True, null=True, upload_to=blog.utils.blog_image_small_upload_to)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('bytes', models.PositiveIntegerField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('autoplay', models.BooleanField(default=False)),
                ('muted', models.BooleanField(default=False)),
                ('loop', models.BooleanField(default=False)),
                ('controls', models.BooleanField(default=True)),
                ('playsinline', models.BooleanField(default=True)),
                ('preload', models.CharField(choices=[('auto', 'auto'), ('metadata', 'metadata'), ('none', 'none')], default='metadata', max_length=10)),
                ('start_at', models.PositiveIntegerField(default=0, help_text='Start in seconds')),
                ('end_at', models.PositiveIntegerField(blank=True, help_text='End in seconds (optional)', null=True)),
                ('oembed_json', models.JSONField(blank=True, null=True)),
                ('oembed_fetched_at', models.DateTimeField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('section', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='blog.blogsection')),
            ],
        ),
        migrations.CreateModel(
            name='BlogVideoCaption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('kind', models.CharField(choices=[('subtitles', 'Subtitles'), ('captions', 'Captions'), ('descriptions', 'Audio Descriptions')], default='subtitles', max_length=20)),
                ('label', models.CharField(blank=True, max_length=120)),
                ('src', models.URLField(blank=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='blog/video_captions/%Y/%m/')),
                ('mime_type', models.CharField(blank=True, max_length=60)),
                ('is_default', models.BooleanField(default=False)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caption_tracks', to='blog.blogvideo')),
            ],
        ),
        migrations.CreateModel(
            name='BlogVideoTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('aria_label', models.CharField(blank=True, max_length=255)),
                ('transcript', models.TextField(blank=True)),
                ('seo_title', models.CharField(blank=True, max_length=255)),
                ('seo_description', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.blogvideo')),
            ],
        ),
        migrations.CreateModel(
            name='FaqItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('internal_note', models.CharField(blank=True, max_length=255)),
                ('is_expanded_by_default', models.BooleanField(default=False)),
                ('anchor', models.SlugField(blank=True, max_length=120)),
                ('is_featured', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='blog.blogsection')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FaqItemTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('question', models.CharField(blank=True, max_length=255)),
                ('answer', models.TextField(blank=True)),
                ('aria_label', models.CharField(blank=True, max_length=255)),
                ('summary', models.CharField(blank=True, max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.faqitem')),
            ],
        ),
        migrations.CreateModel(
            name='BlogPostFaqLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('override_question', models.CharField(blank=True, max_length=255)),
                ('override_answer', models.TextField(blank=True)),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_links', to='blog.blogpost')),
                ('faq_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='blog.faqlibraryitem')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FaqLibraryItemTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField(blank=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.faqlibraryitem')),
            ],
        ),
        migrations.CreateModel(
            name='BlogImageTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('title_text', models.CharField(blank=True, max_length=255)),
                ('aria_label', models.CharField(blank=True, max_length=255)),
                ('long_description', models.TextField(blank=True)),
                ('file_name_override', models.CharField(blank=True, max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.blogimage')),
            ],
            options={
                'indexes': [models.Index(fields=['image', 'language'], name='blog_blogim_image_i_74f7dc_idx')],
                'unique_together': {('image', 'language')},
            },
        ),
        migrations.CreateModel(
            name='BlogPostTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('title', models.CharField(max_length=255)),
                ('short_description', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('seo_title', models.CharField(blank=True, max_length=255)),
                ('seo_description', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.blogpost')),
            ],
            options={
                'unique_together': {('post', 'language')},
            },
        ),
        migrations.CreateModel(
            name='BlogSectionMapTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('en', 'English'), ('de', 'Deutsch'), ('ru', 'Russian'), ('tr', 'Turkish')], max_length=2)),
                ('embed_url', models.URLField(max_length=800)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('section_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.blogsectionmap')),
            ],
        ),
        migrations.AddIndex(
            model_name='blogsectionmap',
            index=models.Index(fields=['is_active'], name='blog_blogse_is_acti_d26d4e_idx'),
        ),
        migrations.AddIndex(
            model_name='blogsectiontranslation',
            index=models.Index(fields=['section', 'language'], name='blog_blogse_section_fd6f60_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blogsectiontranslation',
            unique_together={('section', 'language')},
        ),
        migrations.AddIndex(
            model_name='blogvideo',
            index=models.Index(fields=['provider', 'provider_video_id'], name='blog_blogvi_provide_0866f3_idx'),
        ),
        migrations.AddIndex(
            model_name='blogvideocaption',
            index=models.Index(fields=['video', 'language'], name='blog_blogvi_video_i_de9a04_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blogvideocaption',
            unique_together={('video', 'language', 'kind')},
        ),
        migrations.AddIndex(
            model_name='blogvideotranslation',
            index=models.Index(fields=['video', 'language'], name='blog_blogvi_video_i_cc9062_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blogvideotranslation',
            unique_together={('video', 'language')},
        ),
        migrations.AddIndex(
            model_name='faqitem',
            index=models.Index(fields=['section', 'order'], name='blog_faqite_section_adde6c_idx'),
        ),
        migrations.AddIndex(
            model_name='faqitem',
            index=models.Index(fields=['section', 'is_featured'], name='blog_faqite_section_3f399f_idx'),
        ),
        migrations.AddIndex(
            model_name='faqitemtranslation',
            index=models.Index(fields=['item', 'language'], name='blog_faqite_item_id_d1992a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='faqitemtranslation',
            unique_together={('item', 'language')},
        ),
        migrations.AlterUniqueTogether(
            name='blogpostfaqlink',
            unique_together={('blog_post', 'faq_item')},
        ),
        migrations.AlterUniqueTogether(
            name='faqlibraryitemtranslation',
            unique_together={('item', 'language')},
        ),
        migrations.AddIndex(
            model_name='blogsectionmaptranslation',
            index=models.Index(fields=['section_map', 'language'], name='blog_blogse_section_7d9296_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blogsectionmaptranslation',
            unique_together={('section_map', 'language')},
        ),
    ]
